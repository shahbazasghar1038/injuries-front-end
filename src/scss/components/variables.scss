/* Media Queries */
@use 'sass:map' as map;
@use 'sass:string' as string;


$primary-color: #111;
$secondary-color: #222;
$tertiary-color: #333;
$quaternary-color: #444;
$quinary-color: #555;
$senary-color: #666;
$septenary-color: #777;


$media_queries: (
    'sm-mobile'    : "only screen and (max-width: 479px)",
    'lg-mobile'    : "only screen and (min-width: 480px) and (max-width: 767px)",
    'tablet'       : "only screen and (min-width: 768px) and (max-width: 1024px)",
    'laptop'       : "only screen and (min-width: 1025px) and (max-width: 1290px)",
    'desktop'      : "only screen and (min-width: 1291px) and (max-width: 1560px)",
    'tv'           : "only screen and (min-width: 1561px) and (max-width: 1920px)",
    'lg-tv'        : "only screen and (min-width: 1921px)",
    'retina2'      : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
    'retina3'      : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
    'landscape'    : "screen and (orientation:landscape)",
    'portrait'     : "screen and (orientation:portrait)",

    'air-laptop'       : "only screen and (min-width: 1025px) and (max-width: 1150px)",

);

/* Mixin for Breakpoints */
@mixin for_breakpoint($breakpoints...) {
    @each $breakpoint in $breakpoints {
      $media-query: map.get($media_queries, $breakpoint);

      @if $media-query != null {
        @media #{string.unquote($media-query)} {
          @content;
        }
      } @else {
        @warn "Breakpoint `#{$breakpoint}` does not exist in \$media_queries.";
      }
    }
  }